
// WebSocket polyfills for Jest environment
global.CloseEvent = class CloseEvent extends Event {
  code: number;
  reason: string;
  wasClean: boolean;

  constructor(type: string, eventInitDict: any = {}) {
    super(type);
    this.code = eventInitDict.code || 1000;
    this.reason = eventInitDict.reason || '';
    this.wasClean = eventInitDict.wasClean || true;
  }
} as any;

global.MessageEvent = class MessageEvent extends Event {
  data: any;
  
  constructor(type: string, eventInitDict: any = {}) {
    super(type);
    this.data = eventInitDict.data;
  }
} as any;

global.Event = class Event {
  type: string;
  target: any;
  
  constructor(type: string) {
    this.type = type;
    this.target = null;
  }
} as any;
EOF < /dev/null