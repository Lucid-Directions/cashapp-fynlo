[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=100
    --maxfail=1
    --durations=10
    -p no:warnings
    --disable-warnings
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests requiring database
    unit: marks tests as unit tests
    security: marks tests as security tests
    websocket: marks tests as websocket tests
    multitenant: marks tests as multi-tenant tests
    performance: marks tests as performance tests
    redis: marks tests requiring Redis
    external: marks tests requiring external services

# Timeout for tests (in seconds)
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test output
console_output_style = progress

# Environment variables for tests
env = 
    TESTING=true
    DATABASE_URL=sqlite:///:memory:
    REDIS_URL=redis://localhost:6379/15
    SECRET_KEY=test-secret-key-for-testing-only
    ENVIRONMENT=test

pythonpath = .