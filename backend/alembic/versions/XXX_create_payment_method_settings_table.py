"""
create_payment_method_settings_table

Revision ID: XXX
Revises: (ID of the previous migration, e.g., e8f9d5c7b2a1)
Create Date: YYYY-MM-DD HH:MM:SS.MS

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# It's good practice to try and make revision IDs somewhat descriptive if manually naming
# For example, if previous was 'e8f9d5c7b2a1_add_platform_configuration_schema'
# This revision ID would be auto-generated by `alembic revision -m "..."`
revision = 'XXX_create_payment_method_settings' # Placeholder
down_revision = 'e8f9d5c7b2a1' # Replace with actual previous migration ID from the project
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payment_method_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('restaurant_id', sa.String(), nullable=True),
    sa.Column('payment_method', sa.String(), nullable=False),
    sa.Column('customer_pays_default', sa.Boolean(), nullable=False, server_default=sa.true()),
    sa.Column('allow_toggle_by_merchant', sa.Boolean(), nullable=False, server_default=sa.true()),
    sa.Column('include_processor_fee_in_service_charge', sa.Boolean(), nullable=False, server_default=sa.true()),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_method_settings_id'), 'payment_method_settings', ['id'], unique=False)
    op.create_index(op.f('ix_payment_method_settings_payment_method'), 'payment_method_settings', ['payment_method'], unique=False)
    op.create_index(op.f('ix_payment_method_settings_restaurant_id'), 'payment_method_settings', ['restaurant_id'], unique=False)

    op.create_index('idx_payment_method_settings_restaurant_method',
                    'payment_method_settings',
                    ['restaurant_id', 'payment_method'],
                    unique=False) # Should be unique=True if (restaurant_id, payment_method) is a combined key for overrides

    # Unique constraint for platform-level settings (restaurant_id is NULL)
    op.create_unique_constraint(
        'uq_platform_payment_method_setting',
        'payment_method_settings',
        ['payment_method'],
        postgresql_where=sa.column('restaurant_id').is_(None)
    )

    # Unique constraint for restaurant-specific overrides
    op.create_unique_constraint(
        'uq_restaurant_payment_method_setting',
        'payment_method_settings',
        ['restaurant_id', 'payment_method']
    )
    # ### end Alembic commands ###

    # Seed initial data for common payment methods as platform defaults
    # This makes sure the system has baseline settings.
    # Values from app.schemas.fee_schemas.PaymentMethodEnum
    common_payment_methods = ["stripe", "sumup", "cash", "card_manual", "other"]
    payment_settings_table = sa.table(
        'payment_method_settings',
        sa.column('payment_method', sa.String),
        sa.column('customer_pays_default', sa.Boolean),
        sa.column('allow_toggle_by_merchant', sa.Boolean),
        sa.column('include_processor_fee_in_service_charge', sa.Boolean),
        # restaurant_id will be NULL for these platform defaults
    )

    default_settings = []
    for method in common_payment_methods:
        is_cash = (method == "cash")
        default_settings.append({
            'payment_method': method,
            'customer_pays_default': not is_cash, # True for non-cash, False for cash
            'allow_toggle_by_merchant': not is_cash, # True for non-cash, False for cash
            'include_processor_fee_in_service_charge': not is_cash, # True for non-cash, False for cash
        })

    op.bulk_insert(payment_settings_table, default_settings)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_restaurant_payment_method_setting', 'payment_method_settings', type_='unique')
    op.drop_constraint('uq_platform_payment_method_setting', 'payment_method_settings', type_='unique')
    op.drop_index('idx_payment_method_settings_restaurant_method', table_name='payment_method_settings')
    op.drop_index(op.f('ix_payment_method_settings_restaurant_id'), table_name='payment_method_settings')
    op.drop_index(op.f('ix_payment_method_settings_payment_method'), table_name='payment_method_settings')
    op.drop_index(op.f('ix_payment_method_settings_id'), table_name='payment_method_settings')
    op.drop_table('payment_method_settings')
    # ### end Alembic commands ###
