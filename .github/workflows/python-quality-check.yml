name: Python Quality Check

on:
  push:
    paths:
      - 'backend/**/*.py'
      - '.github/workflows/python-quality-check.yml'
  pull_request:
    paths:
      - 'backend/**/*.py'
      - '.github/workflows/python-quality-check.yml'

jobs:
  python-quality:
    runs-on: ubuntu-latest
    name: Python Quality Checks
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install quality tools
      run: |
        pip install --upgrade pip
        pip install ruff black mypy flake8 bandit[toml]
    
    - name: Run Python syntax check (compile)
      run: |
        echo "1Ô∏è‚É£ Checking Python syntax with compile..."
        cd backend
        python -m compileall -q app || (echo "‚ùå Syntax errors found!" && exit 1)
        echo "‚úÖ Python syntax check passed!"
    
    - name: Run Ruff (fast Python linter)
      continue-on-error: true  # Temporarily non-blocking while we fix issues
      run: |
        echo "2Ô∏è‚É£ Running Ruff linter..."
        cd backend
        ruff check app --select F,E,W,C,B,I,N,UP || echo "‚ö†Ô∏è Ruff found issues (non-blocking)"
        echo "‚úÖ Ruff check completed!"
    
    - name: Run Black (code formatter check)
      continue-on-error: true  # Temporarily non-blocking while we fix issues
      run: |
        echo "3Ô∏è‚É£ Checking code formatting with Black..."
        cd backend
        black --check app || echo "‚ö†Ô∏è Black found formatting issues (non-blocking)"
        echo "‚úÖ Black check completed!"
    
    - name: Run MyPy (type checker)
      continue-on-error: true  # Allow MyPy to fail initially as we fix type issues
      run: |
        echo "4Ô∏è‚É£ Running MyPy type checker..."
        cd backend
        mypy app --ignore-missing-imports --no-strict-optional || echo "‚ö†Ô∏è MyPy found type issues (non-blocking)"
    
    - name: Run Flake8 (style guide checker)
      continue-on-error: true  # Temporarily non-blocking while we fix issues
      run: |
        echo "5Ô∏è‚É£ Running Flake8 style checker..."
        cd backend
        # E501: line too long (we use Black for this)
        # W503: line break before binary operator (conflicts with Black)
        flake8 app --max-line-length=120 --extend-ignore=E501,W503 || echo "‚ö†Ô∏è Flake8 found style issues (non-blocking)"
        echo "‚úÖ Flake8 check completed!"
    
    - name: Run Bandit (security linter)
      continue-on-error: true  # Temporarily non-blocking while we fix issues
      run: |
        echo "6Ô∏è‚É£ Running Bandit security check..."
        cd backend
        bandit -r app -ll -i || echo "‚ö†Ô∏è Bandit found security issues (non-blocking)"
        echo "‚úÖ Bandit check completed!"
    
    - name: Summary
      if: always()
      run: |
        echo "üìä Python Quality Check Summary:"
        echo "‚úÖ 1. Compile - Syntax validation"
        echo "‚úÖ 2. Ruff - Fast Python linter"
        echo "‚úÖ 3. Black - Code formatting"
        echo "‚ö†Ô∏è 4. MyPy - Type checking (non-blocking)"
        echo "‚úÖ 5. Flake8 - Style guide enforcement"
        echo "‚úÖ 6. Bandit - Security analysis"